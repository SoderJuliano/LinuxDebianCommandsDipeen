sudo apt update

apt-get install git-all -y

sudo apt install curl

# This is Node Version Manager

curl https://raw.githubusercontent.com/creationix/nvm/master/install.sh | bash 

# This make nvm works for you profile

source ~/.profile 

# Command exemple
nvm install 16.14.0  

# Angular CLI install

npm install -g @angular/cli

# Here is like a Java version Manager or switcher

$ curl -s "https://get.sdkman.io" | bash

$ source "$HOME/.sdkman/bin/sdkman-init.sh"

sdk list java

sdk install java 17.0.5-amzn 

# Docker

sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

#!/bin/sh

# Shell script to add docker-ce to Deepin Linux repositories

# Remove old docker
sudo apt-get remove -y docker docker-engine docker.io containerd runc

# Install dependencies
sudo apt-get install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common
    
# Add GPG and fingerprint
curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -
sudo apt-key fingerprint 0EBFCD88

# Add debian repository in deepin sources list
printf 'deb [arch=amd64] https://download.docker.com/linux/debian buster stable\n' \
| sudo tee /etc/apt/sources.list.d/docker-ce.list

# Update packages and install
sudo apt-get update -y
sudo apt-get install -y docker-ce

# Add current user to the docker users group (OPTIONAL)
sudo usermod -aG docker $(whoami)

# May need to give an explicit access to run not as superuser
sudo chown <your local usar name>:docker /var/run/docker.sock

# Docker-compose
# Download the latest stable release of Docker Compose
sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose

# Apply executable permissions to the binary
sudo chmod +x /usr/local/bin/docker-compose

# Verify the installation
docker-compose --version

# For linux where cat enable or even dont see wifi stettings 
sudo apt update
sudo apt install build-essential git dkms bc
git clone https://github.com/brektrou/rtl8821CU.git
cd rtl8821CU
chmod +x dkms-install.sh
sudo ./dkms-install.sh

It builds successfully, albeit with a few possibly harmless warnings, on my 5.0.0-23 system

Next, do:

sudo modprobe 8821cu

Your wireless should now be working.

## In case or arch linux PACMAN:

O Pacman é o gerenciador de pacotes usado no Arch Linux e em distribuições baseadas no Arch. Aqui estão os principais comandos do Pacman:

Atualizar o sistema:

sudo pacman -Syu - Sincroniza o banco de dados de pacotes e atualiza todos os pacotes instalados no sistema.
Buscar um software:

pacman -Ss nome_do_pacote - Pesquisa por um pacote específico no repositório. Pode ser usado para encontrar pacotes disponíveis para instalação.
Instalar um pacote:

sudo pacman -S nome_do_pacote - Instala um pacote específico no sistema.
Remover um pacote:

sudo pacman -R nome_do_pacote - Remove um pacote específico do sistema, mas mantém suas dependências não utilizadas.
Remover um pacote e suas dependências não utilizadas:

sudo pacman -Rs nome_do_pacote - Remove um pacote específico e todas as suas dependências não utilizadas.
Limpar o cache de pacotes:

sudo pacman -Sc - Remove todos os pacotes antigos do cache, liberando espaço em disco.

ver ip: ip addr show

sudo pacman -Syu

sudo pacman -S nodejs npm

sudo npm install -g @angular/cli

sudo pacman -S docker-compose

